//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/_ProjectSettings/Input/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace RobbieWagnerGames
{
    public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @PlayerInputActions()
        {
            asset = InputActionAsset.FromJson(@"{
        ""name"": ""PlayerInputActions"",
        ""maps"": [
            {
                ""name"": ""Exploration"",
                ""id"": ""702247f8-5f3d-494f-881f-d3d22feb45d5"",
                ""actions"": [
                    {
                        ""name"": ""Move"",
                        ""type"": ""Value"",
                        ""id"": ""80bf7dc0-6ea5-4412-b69d-01f7d052bb68"",
                        ""expectedControlType"": ""Vector2"",
                        ""processors"": """",
                        ""interactions"": """",
                        ""initialStateCheck"": true
                    },
                    {
                        ""name"": ""Interact"",
                        ""type"": ""Button"",
                        ""id"": ""50ccf3a0-c345-4c95-86bd-72a4a1a2024f"",
                        ""expectedControlType"": ""Button"",
                        ""processors"": """",
                        ""interactions"": """",
                        ""initialStateCheck"": false
                    }
                ],
                ""bindings"": [
                    {
                        ""name"": ""Keyboard"",
                        ""id"": ""746f7df3-450c-4044-8c6f-378be6c5cbc7"",
                        ""path"": ""2DVector"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""Move"",
                        ""isComposite"": true,
                        ""isPartOfComposite"": false
                    },
                    {
                        ""name"": ""up"",
                        ""id"": ""e7f8d68e-a9b5-4a6f-bc81-536bf0647896"",
                        ""path"": ""<Keyboard>/w"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""Move"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": true
                    },
                    {
                        ""name"": ""up"",
                        ""id"": ""a6895327-029f-47ec-98d2-694bc9e68e82"",
                        ""path"": ""<Keyboard>/upArrow"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""Move"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": true
                    },
                    {
                        ""name"": ""down"",
                        ""id"": ""a22d66ff-c77f-4714-9698-527267c37a40"",
                        ""path"": ""<Keyboard>/s"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""Move"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": true
                    },
                    {
                        ""name"": ""down"",
                        ""id"": ""07385456-8aff-4d44-845a-a03b0769c555"",
                        ""path"": ""<Keyboard>/downArrow"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""Move"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": true
                    },
                    {
                        ""name"": ""left"",
                        ""id"": ""2d7d9711-8d30-4ca2-be33-8e747cf5c253"",
                        ""path"": ""<Keyboard>/a"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""Move"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": true
                    },
                    {
                        ""name"": ""left"",
                        ""id"": ""3b5dbf2a-79fe-4862-ab0b-0564bcb44c8d"",
                        ""path"": ""<Keyboard>/leftArrow"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""Move"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": true
                    },
                    {
                        ""name"": ""right"",
                        ""id"": ""3711e0af-ca5c-4f40-a815-fb5dd3484353"",
                        ""path"": ""<Keyboard>/d"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""Move"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": true
                    },
                    {
                        ""name"": ""right"",
                        ""id"": ""981e2446-edea-465a-99b7-09b251c37f25"",
                        ""path"": ""<Keyboard>/rightArrow"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""Move"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": true
                    },
                    {
                        ""name"": """",
                        ""id"": ""f5dbaf61-a2b6-4784-8f8d-b78b3be2b325"",
                        ""path"": ""<Gamepad>/leftStick"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""Move"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": false
                    },
                    {
                        ""name"": """",
                        ""id"": ""2055b200-44b0-4d77-b4bc-434d5a588fbe"",
                        ""path"": ""<Keyboard>/e"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""Interact"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": false
                    },
                    {
                        ""name"": """",
                        ""id"": ""1287ec7c-588e-4a0e-bb78-2db562017cb2"",
                        ""path"": ""<Keyboard>/enter"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""Interact"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": false
                    }
                ]
            },
            {
                ""name"": ""Combat"",
                ""id"": ""227c41b1-4a3a-412c-9139-d1a9cdd19211"",
                ""actions"": [
                    {
                        ""name"": ""NavigateCombatMenu"",
                        ""type"": ""Value"",
                        ""id"": ""41eda06e-5641-4040-95ab-475aa5fc62d2"",
                        ""expectedControlType"": ""Axis"",
                        ""processors"": """",
                        ""interactions"": ""Press"",
                        ""initialStateCheck"": true
                    },
                    {
                        ""name"": ""MenuSelect"",
                        ""type"": ""Button"",
                        ""id"": ""a6ae37b7-98a9-46b0-89cf-d3d6dda618f5"",
                        ""expectedControlType"": ""Button"",
                        ""processors"": """",
                        ""interactions"": ""Press"",
                        ""initialStateCheck"": false
                    },
                    {
                        ""name"": ""UndoLastSelection"",
                        ""type"": ""Button"",
                        ""id"": ""32363e3c-9cd0-4643-b371-18b3bc3f07eb"",
                        ""expectedControlType"": ""Button"",
                        ""processors"": """",
                        ""interactions"": ""Press"",
                        ""initialStateCheck"": false
                    }
                ],
                ""bindings"": [
                    {
                        ""name"": ""Navigation"",
                        ""id"": ""a22a260a-3033-415c-924f-105130f2684e"",
                        ""path"": ""1DAxis"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""NavigateCombatMenu"",
                        ""isComposite"": true,
                        ""isPartOfComposite"": false
                    },
                    {
                        ""name"": ""positive"",
                        ""id"": ""b8a1b344-c89f-4494-b972-7d9c098b3698"",
                        ""path"": ""<Keyboard>/d"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""NavigateCombatMenu"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": true
                    },
                    {
                        ""name"": ""positive"",
                        ""id"": ""f54e59d6-a56f-46d3-bca7-7b9b0c21f318"",
                        ""path"": ""<Keyboard>/rightArrow"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""NavigateCombatMenu"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": true
                    },
                    {
                        ""name"": ""negative"",
                        ""id"": ""4313ef34-08f6-4770-806e-eb66c9893617"",
                        ""path"": ""<Keyboard>/a"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""NavigateCombatMenu"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": true
                    },
                    {
                        ""name"": ""negative"",
                        ""id"": ""a3dd77d0-c8b5-44a3-aecd-4e7f59253685"",
                        ""path"": ""<Keyboard>/leftArrow"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""NavigateCombatMenu"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": true
                    },
                    {
                        ""name"": """",
                        ""id"": ""1cb52e55-6524-4077-ab8e-eec00fd5d47d"",
                        ""path"": ""<Keyboard>/e"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""MenuSelect"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": false
                    },
                    {
                        ""name"": """",
                        ""id"": ""39cea317-be9a-455b-8319-8eea4ae5a8da"",
                        ""path"": ""<Keyboard>/enter"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""MenuSelect"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": false
                    },
                    {
                        ""name"": """",
                        ""id"": ""dda7ecfc-ac7f-4632-b12d-08a2f5673ca1"",
                        ""path"": ""<Keyboard>/backspace"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""UndoLastSelection"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": false
                    }
                ]
            },
            {
                ""name"": ""General"",
                ""id"": ""45f63437-b512-4b5b-af67-2023b6fdcc93"",
                ""actions"": [
                    {
                        ""name"": ""Pause"",
                        ""type"": ""Button"",
                        ""id"": ""28788362-164b-431b-a12b-da43c032631a"",
                        ""expectedControlType"": ""Button"",
                        ""processors"": """",
                        ""interactions"": """",
                        ""initialStateCheck"": false
                    },
                    {
                        ""name"": ""NavigateMenuHorizontally"",
                        ""type"": ""Value"",
                        ""id"": ""0a0312bc-0479-40b2-99a4-c450ee916ae4"",
                        ""expectedControlType"": ""Axis"",
                        ""processors"": """",
                        ""interactions"": """",
                        ""initialStateCheck"": true
                    },
                    {
                        ""name"": ""NavigateMenuVertically"",
                        ""type"": ""Value"",
                        ""id"": ""9c43a341-cbf4-4d00-82c3-947a113e4ec9"",
                        ""expectedControlType"": ""Axis"",
                        ""processors"": """",
                        ""interactions"": """",
                        ""initialStateCheck"": true
                    }
                ],
                ""bindings"": [
                    {
                        ""name"": """",
                        ""id"": ""a63a4444-9e84-436d-8e90-899144cc3614"",
                        ""path"": ""<Keyboard>/escape"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""Pause"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": false
                    },
                    {
                        ""name"": """",
                        ""id"": ""21366928-9607-44d2-9956-fac5e7caf3a5"",
                        ""path"": ""<Gamepad>/start"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""Pause"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": false
                    },
                    {
                        ""name"": ""Navigation"",
                        ""id"": ""aaed9b89-3741-43d5-a1e9-67b010a9ba5b"",
                        ""path"": ""1DAxis"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""NavigateMenuHorizontally"",
                        ""isComposite"": true,
                        ""isPartOfComposite"": false
                    },
                    {
                        ""name"": ""positive"",
                        ""id"": ""db0d48b1-98e0-4608-94ab-575c7266aa4f"",
                        ""path"": ""<Keyboard>/d"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""NavigateMenuHorizontally"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": true
                    },
                    {
                        ""name"": ""positive"",
                        ""id"": ""e084f775-f491-48e4-9408-c6e2e9e4ddc8"",
                        ""path"": ""<Keyboard>/rightArrow"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""NavigateMenuHorizontally"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": true
                    },
                    {
                        ""name"": ""negative"",
                        ""id"": ""e5d73e0b-0c0e-4944-9c22-e42dec91f063"",
                        ""path"": ""<Keyboard>/a"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""NavigateMenuHorizontally"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": true
                    },
                    {
                        ""name"": ""negative"",
                        ""id"": ""60b9d474-a6b4-42d8-95aa-82bad7fef071"",
                        ""path"": ""<Keyboard>/leftArrow"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""NavigateMenuHorizontally"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": true
                    },
                    {
                        ""name"": ""Navigation"",
                        ""id"": ""9fdb087a-aa57-466a-ae47-363f3153d90e"",
                        ""path"": ""1DAxis"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""NavigateMenuVertically"",
                        ""isComposite"": true,
                        ""isPartOfComposite"": false
                    },
                    {
                        ""name"": ""positive"",
                        ""id"": ""9c83703d-47d4-4838-a6fd-449a0608887d"",
                        ""path"": ""<Keyboard>/w"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""NavigateMenuVertically"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": true
                    },
                    {
                        ""name"": ""positive"",
                        ""id"": ""ad28c140-5fb4-4324-b95d-de627ef7c871"",
                        ""path"": ""<Keyboard>/upArrow"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""NavigateMenuVertically"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": true
                    },
                    {
                        ""name"": ""negative"",
                        ""id"": ""525064b3-054d-406e-ab2c-e18feb9dcaf2"",
                        ""path"": ""<Keyboard>/s"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""NavigateMenuVertically"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": true
                    },
                    {
                        ""name"": ""negative"",
                        ""id"": ""5f555bbe-e331-4334-95a1-d22589c0f047"",
                        ""path"": ""<Keyboard>/downArrow"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""NavigateMenuVertically"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": true
                    }
                ]
            },
            {
                ""name"": ""Dialogue"",
                ""id"": ""f0a587fc-a3d4-49b2-9782-19dfd8ed9143"",
                ""actions"": [
                    {
                        ""name"": ""NextDialogueLine"",
                        ""type"": ""Button"",
                        ""id"": ""0f4abdce-9386-4b3b-bca7-07683fd70a96"",
                        ""expectedControlType"": ""Button"",
                        ""processors"": """",
                        ""interactions"": ""Press"",
                        ""initialStateCheck"": false
                    },
                    {
                        ""name"": ""NavigateDialogueMenu"",
                        ""type"": ""Value"",
                        ""id"": ""0e1afa4f-3e42-445b-8227-0aef7235b8c5"",
                        ""expectedControlType"": ""Axis"",
                        ""processors"": """",
                        ""interactions"": """",
                        ""initialStateCheck"": true
                    }
                ],
                ""bindings"": [
                    {
                        ""name"": """",
                        ""id"": ""ecfd1d14-aba5-4179-9977-777f257d84af"",
                        ""path"": ""<Keyboard>/enter"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""NextDialogueLine"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": false
                    },
                    {
                        ""name"": """",
                        ""id"": ""58f22490-3a88-4d7e-884a-20dccc7cf7f9"",
                        ""path"": ""<Keyboard>/e"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""NextDialogueLine"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": false
                    },
                    {
                        ""name"": ""1D Axis"",
                        ""id"": ""c0c44b7a-d855-4060-85a9-b7e36610db8c"",
                        ""path"": ""1DAxis"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""NavigateDialogueMenu"",
                        ""isComposite"": true,
                        ""isPartOfComposite"": false
                    },
                    {
                        ""name"": ""negative"",
                        ""id"": ""6c6adc61-722d-42e6-9e50-0c91b0648375"",
                        ""path"": ""<Keyboard>/w"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""NavigateDialogueMenu"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": true
                    },
                    {
                        ""name"": ""negative"",
                        ""id"": ""3528f48d-9954-45b8-99c5-056ca713fd30"",
                        ""path"": ""<Keyboard>/upArrow"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""NavigateDialogueMenu"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": true
                    },
                    {
                        ""name"": ""positive"",
                        ""id"": ""cc84bcbf-2ff1-4b3a-bece-34462b6dcfe8"",
                        ""path"": ""<Keyboard>/s"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""NavigateDialogueMenu"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": true
                    },
                    {
                        ""name"": ""positive"",
                        ""id"": ""d1fbe7ba-5eff-4363-9c66-48c0d38edc6f"",
                        ""path"": ""<Keyboard>/downArrow"",
                        ""interactions"": """",
                        ""processors"": """",
                        ""groups"": """",
                        ""action"": ""NavigateDialogueMenu"",
                        ""isComposite"": false,
                        ""isPartOfComposite"": true
                    }
                ]
            }
        ],
        ""controlSchemes"": []
    }");
            // Exploration
            m_Exploration = asset.FindActionMap("Exploration", throwIfNotFound: true);
            m_Exploration_Move = m_Exploration.FindAction("Move", throwIfNotFound: true);
            m_Exploration_Interact = m_Exploration.FindAction("Interact", throwIfNotFound: true);
            // Combat
            m_Combat = asset.FindActionMap("Combat", throwIfNotFound: true);
            m_Combat_NavigateCombatMenu = m_Combat.FindAction("NavigateCombatMenu", throwIfNotFound: true);
            m_Combat_MenuSelect = m_Combat.FindAction("MenuSelect", throwIfNotFound: true);
            m_Combat_UndoLastSelection = m_Combat.FindAction("UndoLastSelection", throwIfNotFound: true);
            // General
            m_General = asset.FindActionMap("General", throwIfNotFound: true);
            m_General_Pause = m_General.FindAction("Pause", throwIfNotFound: true);
            m_General_NavigateMenuHorizontally = m_General.FindAction("NavigateMenuHorizontally", throwIfNotFound: true);
            m_General_NavigateMenuVertically = m_General.FindAction("NavigateMenuVertically", throwIfNotFound: true);
            // Dialogue
            m_Dialogue = asset.FindActionMap("Dialogue", throwIfNotFound: true);
            m_Dialogue_NextDialogueLine = m_Dialogue.FindAction("NextDialogueLine", throwIfNotFound: true);
            m_Dialogue_NavigateDialogueMenu = m_Dialogue.FindAction("NavigateDialogueMenu", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Exploration
        private readonly InputActionMap m_Exploration;
        private List<IExplorationActions> m_ExplorationActionsCallbackInterfaces = new List<IExplorationActions>();
        private readonly InputAction m_Exploration_Move;
        private readonly InputAction m_Exploration_Interact;
        public struct ExplorationActions
        {
            private @PlayerInputActions m_Wrapper;
            public ExplorationActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_Exploration_Move;
            public InputAction @Interact => m_Wrapper.m_Exploration_Interact;
            public InputActionMap Get() { return m_Wrapper.m_Exploration; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(ExplorationActions set) { return set.Get(); }
            public void AddCallbacks(IExplorationActions instance)
            {
                if (instance == null || m_Wrapper.m_ExplorationActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_ExplorationActionsCallbackInterfaces.Add(instance);
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
            }

            private void UnregisterCallbacks(IExplorationActions instance)
            {
                @Move.started -= instance.OnMove;
                @Move.performed -= instance.OnMove;
                @Move.canceled -= instance.OnMove;
                @Interact.started -= instance.OnInteract;
                @Interact.performed -= instance.OnInteract;
                @Interact.canceled -= instance.OnInteract;
            }

            public void RemoveCallbacks(IExplorationActions instance)
            {
                if (m_Wrapper.m_ExplorationActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IExplorationActions instance)
            {
                foreach (var item in m_Wrapper.m_ExplorationActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_ExplorationActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public ExplorationActions @Exploration => new ExplorationActions(this);

        // Combat
        private readonly InputActionMap m_Combat;
        private List<ICombatActions> m_CombatActionsCallbackInterfaces = new List<ICombatActions>();
        private readonly InputAction m_Combat_NavigateCombatMenu;
        private readonly InputAction m_Combat_MenuSelect;
        private readonly InputAction m_Combat_UndoLastSelection;
        public struct CombatActions
        {
            private @PlayerInputActions m_Wrapper;
            public CombatActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @NavigateCombatMenu => m_Wrapper.m_Combat_NavigateCombatMenu;
            public InputAction @MenuSelect => m_Wrapper.m_Combat_MenuSelect;
            public InputAction @UndoLastSelection => m_Wrapper.m_Combat_UndoLastSelection;
            public InputActionMap Get() { return m_Wrapper.m_Combat; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(CombatActions set) { return set.Get(); }
            public void AddCallbacks(ICombatActions instance)
            {
                if (instance == null || m_Wrapper.m_CombatActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_CombatActionsCallbackInterfaces.Add(instance);
                @NavigateCombatMenu.started += instance.OnNavigateCombatMenu;
                @NavigateCombatMenu.performed += instance.OnNavigateCombatMenu;
                @NavigateCombatMenu.canceled += instance.OnNavigateCombatMenu;
                @MenuSelect.started += instance.OnMenuSelect;
                @MenuSelect.performed += instance.OnMenuSelect;
                @MenuSelect.canceled += instance.OnMenuSelect;
                @UndoLastSelection.started += instance.OnUndoLastSelection;
                @UndoLastSelection.performed += instance.OnUndoLastSelection;
                @UndoLastSelection.canceled += instance.OnUndoLastSelection;
            }

            private void UnregisterCallbacks(ICombatActions instance)
            {
                @NavigateCombatMenu.started -= instance.OnNavigateCombatMenu;
                @NavigateCombatMenu.performed -= instance.OnNavigateCombatMenu;
                @NavigateCombatMenu.canceled -= instance.OnNavigateCombatMenu;
                @MenuSelect.started -= instance.OnMenuSelect;
                @MenuSelect.performed -= instance.OnMenuSelect;
                @MenuSelect.canceled -= instance.OnMenuSelect;
                @UndoLastSelection.started -= instance.OnUndoLastSelection;
                @UndoLastSelection.performed -= instance.OnUndoLastSelection;
                @UndoLastSelection.canceled -= instance.OnUndoLastSelection;
            }

            public void RemoveCallbacks(ICombatActions instance)
            {
                if (m_Wrapper.m_CombatActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(ICombatActions instance)
            {
                foreach (var item in m_Wrapper.m_CombatActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_CombatActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public CombatActions @Combat => new CombatActions(this);

        // General
        private readonly InputActionMap m_General;
        private List<IGeneralActions> m_GeneralActionsCallbackInterfaces = new List<IGeneralActions>();
        private readonly InputAction m_General_Pause;
        private readonly InputAction m_General_NavigateMenuHorizontally;
        private readonly InputAction m_General_NavigateMenuVertically;
        public struct GeneralActions
        {
            private @PlayerInputActions m_Wrapper;
            public GeneralActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Pause => m_Wrapper.m_General_Pause;
            public InputAction @NavigateMenuHorizontally => m_Wrapper.m_General_NavigateMenuHorizontally;
            public InputAction @NavigateMenuVertically => m_Wrapper.m_General_NavigateMenuVertically;
            public InputActionMap Get() { return m_Wrapper.m_General; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(GeneralActions set) { return set.Get(); }
            public void AddCallbacks(IGeneralActions instance)
            {
                if (instance == null || m_Wrapper.m_GeneralActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_GeneralActionsCallbackInterfaces.Add(instance);
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @NavigateMenuHorizontally.started += instance.OnNavigateMenuHorizontally;
                @NavigateMenuHorizontally.performed += instance.OnNavigateMenuHorizontally;
                @NavigateMenuHorizontally.canceled += instance.OnNavigateMenuHorizontally;
                @NavigateMenuVertically.started += instance.OnNavigateMenuVertically;
                @NavigateMenuVertically.performed += instance.OnNavigateMenuVertically;
                @NavigateMenuVertically.canceled += instance.OnNavigateMenuVertically;
            }

            private void UnregisterCallbacks(IGeneralActions instance)
            {
                @Pause.started -= instance.OnPause;
                @Pause.performed -= instance.OnPause;
                @Pause.canceled -= instance.OnPause;
                @NavigateMenuHorizontally.started -= instance.OnNavigateMenuHorizontally;
                @NavigateMenuHorizontally.performed -= instance.OnNavigateMenuHorizontally;
                @NavigateMenuHorizontally.canceled -= instance.OnNavigateMenuHorizontally;
                @NavigateMenuVertically.started -= instance.OnNavigateMenuVertically;
                @NavigateMenuVertically.performed -= instance.OnNavigateMenuVertically;
                @NavigateMenuVertically.canceled -= instance.OnNavigateMenuVertically;
            }

            public void RemoveCallbacks(IGeneralActions instance)
            {
                if (m_Wrapper.m_GeneralActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IGeneralActions instance)
            {
                foreach (var item in m_Wrapper.m_GeneralActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_GeneralActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public GeneralActions @General => new GeneralActions(this);

        // Dialogue
        private readonly InputActionMap m_Dialogue;
        private List<IDialogueActions> m_DialogueActionsCallbackInterfaces = new List<IDialogueActions>();
        private readonly InputAction m_Dialogue_NextDialogueLine;
        private readonly InputAction m_Dialogue_NavigateDialogueMenu;
        public struct DialogueActions
        {
            private @PlayerInputActions m_Wrapper;
            public DialogueActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @NextDialogueLine => m_Wrapper.m_Dialogue_NextDialogueLine;
            public InputAction @NavigateDialogueMenu => m_Wrapper.m_Dialogue_NavigateDialogueMenu;
            public InputActionMap Get() { return m_Wrapper.m_Dialogue; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(DialogueActions set) { return set.Get(); }
            public void AddCallbacks(IDialogueActions instance)
            {
                if (instance == null || m_Wrapper.m_DialogueActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_DialogueActionsCallbackInterfaces.Add(instance);
                @NextDialogueLine.started += instance.OnNextDialogueLine;
                @NextDialogueLine.performed += instance.OnNextDialogueLine;
                @NextDialogueLine.canceled += instance.OnNextDialogueLine;
                @NavigateDialogueMenu.started += instance.OnNavigateDialogueMenu;
                @NavigateDialogueMenu.performed += instance.OnNavigateDialogueMenu;
                @NavigateDialogueMenu.canceled += instance.OnNavigateDialogueMenu;
            }

            private void UnregisterCallbacks(IDialogueActions instance)
            {
                @NextDialogueLine.started -= instance.OnNextDialogueLine;
                @NextDialogueLine.performed -= instance.OnNextDialogueLine;
                @NextDialogueLine.canceled -= instance.OnNextDialogueLine;
                @NavigateDialogueMenu.started -= instance.OnNavigateDialogueMenu;
                @NavigateDialogueMenu.performed -= instance.OnNavigateDialogueMenu;
                @NavigateDialogueMenu.canceled -= instance.OnNavigateDialogueMenu;
            }

            public void RemoveCallbacks(IDialogueActions instance)
            {
                if (m_Wrapper.m_DialogueActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IDialogueActions instance)
            {
                foreach (var item in m_Wrapper.m_DialogueActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_DialogueActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public DialogueActions @Dialogue => new DialogueActions(this);
        public interface IExplorationActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnInteract(InputAction.CallbackContext context);
        }
        public interface ICombatActions
        {
            void OnNavigateCombatMenu(InputAction.CallbackContext context);
            void OnMenuSelect(InputAction.CallbackContext context);
            void OnUndoLastSelection(InputAction.CallbackContext context);
        }
        public interface IGeneralActions
        {
            void OnPause(InputAction.CallbackContext context);
            void OnNavigateMenuHorizontally(InputAction.CallbackContext context);
            void OnNavigateMenuVertically(InputAction.CallbackContext context);
        }
        public interface IDialogueActions
        {
            void OnNextDialogueLine(InputAction.CallbackContext context);
            void OnNavigateDialogueMenu(InputAction.CallbackContext context);
        }
    }
}